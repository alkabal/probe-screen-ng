o<psng_tool_diameter> sub

o10 if [#<_hal[probe.setterheight]> LE 0]
     o<psng_hook_end> call
    (ABORT,TOOLSETTER HEIGHT NOT PROBED/CONFIGURED)
o10 endif

o<psng_goto_toolsensor> call

(cancel all Z offsets)(+ cutter compensation for diameter measurement)
G92.1                                                                       ; use pause/restore can be better than reset ???
G49 ;G40

o<psng_backup_offset> call
G10 L2 P0 Z0                                                                ; reset G54 offset for correct tool measurement

o<psng_start_setter_probing> call
o500 if [#5070 EQ 0]
     G10 L2 P0     Z#<_backup_offset>
     o<psng_hook_end> call
    (ABORT,FAILURE : TOOL SETTER FOR TOOL DIAMETER DOES NOT FOUND THE CONTACT POINT)
o500 endif

G91
G1    Z[#<_hal[probe.ps_z_clearance]>*0.7] F#<_hal[probe.ps_searchvel]>     ; macro use ps_z_clearance*0.7 for allow tool to be en contact with setter pad
G90

#<touch_result> = [#5063 - #<_hal[probe.setterheight]>]
(print, probe Z=#<touch_result>)

G10 L1 P#<_current_tool> Z[#<touch_result>]
G10 L2 P0     Z#<_backup_offset>

; next for x+ x- y+ y- done inside python code

(start spindle if you use reverse spindle for tool diameter measuring)
 o500 if [#<_current_tool> GT 1 AND #<_hal[probe.use_rotate_spindle]> EQ 1 AND #<_hal[and2.combined-probe.in0]> EQ 1]
      M4 S#<_ini[TOOLSENSOR]REV_ROTATION_SPEED>
 o500 endif

o<psng_tool_diameter> endsub
M2

