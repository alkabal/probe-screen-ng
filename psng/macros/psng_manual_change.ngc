; manual toolchange with automatic tool length probe

o<psng_manual_change> sub

;(DEBUG,in change tool_in_spindle=#<tool_in_spindle> current_pocket=#<current_pocket>)
;(DEBUG,selected_tool=#<selected_tool> selected_pocket=#<selected_pocket>)

;otherwise after the M6 this information is gone!
;#<tool> = #<selected_tool>
#<pocket> = #<selected_pocket>

; we must execute this only in the milltask interpreter
; or preview will break, so test for '#<_task>' which is 1 for
; the milltask interpreter and 0 in the UI's
o10 if [#<_task> EQ 0]
        (DEBUG,Task ist Null)
        o<psng_hook_end> call
o10     return [999]
o10 endif

o<psng_goto_changepos> call

; NEED TO ADD A CHECK IF #<_current_tool> EQ #<_selected_tool> display toolchange confirmation actually if you ask same tool the popup is not displayed


o100 if [#<_hal[probe.use_toolmeasurement]> EQ 0 OR #<_selected_tool> EQ 0]
     o110 if [#<_current_tool> EQ #<_selected_tool>]
          (MSG,SAME TOOL AS ACTUAL ASKED AND VALIDATED AUTOMATICALLY)
     o110 endif
     M6          ; using the code being remapped here means 'use builtin behaviour' used here for M6T0
     G43
o100 return [3] ; indicate no tool measurement possible with tool 0

o100 else
     o120 if [#<_current_tool> EQ #<_selected_tool>]
          (MSG,SAME TOOL AS ACTUAL SO MEASUREMENT START AUTOMATICALLY)
          (MSG,NEED TO UNPAUSE)
          M0
     o120 endif
     
     o130 if [#<_hal[probe.ps_searchvel]> LE 0]
         (MSG,SEARCH VELOCITY NOT CONFIGURED)
     o130 return [-1] ; indicate searchvel <= 0
     o130 endif
     
     o140 if [#<_hal[probe.ps_probevel]> LE 0]
         (MSG,PROBE VELOCITY NOT CONFIGURED)
     o140 return [-2] ; indicate probevel <= 0
     o140 endif

     o150 if [#<_hal[probe.use_toolmeasurement]> EQ 1 AND #<_selected_tool> GT 0 AND #<_hal[probe.setterheight]> LE 0]
          (MSG,TOOLSETTER HEIGHT NOT CONFIGURED)
          (MSG,TOOLCHANGE CANCELED)
          ;G4P0.2
          ;M2            ; no M6 here for canceling toolchange
     o150 return [-3]
     o150 endif

     o<psng_hook> call [1]
     
o100 endif

M6   ; using the code being remapped here means 'use builtin behaviour' used here for M6Tx

o<psng_goto_toolsensor> call                                                ; with G90 inside

; cancel tool offset
;G92.1                                                                      ; IS NOT WANTED HERE because this macro is used when program run or if needed better is use pause than reset
G49
G10 L2 P0 Z0 ; reset G54 offset for correct tool measurement                ; need to thinbk about use save restore like gotos

o<psng_start_setter_probing> call

o500 if [#5070 EQ 0]
     o<psng_hook_end> call
o500 return [-3] ; indicate probe contact failure to epilog
o500 endif

#<touch_result> = #5063
G10 L1 P#<_selected_tool> Z[#<touch_result> - #<_hal[probe.setterheight]>]
G10 L2 P0 Z#<_hal[probe.blockheight]> ; apply G54 offset again after correct tool measurement  ; need to thinbk about use save restore like gotos

(back to Z home position only)
G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>+#<_ini[PROBE_SCREEN]Z_SAFE_TRAVEL_OFFSET>]
G43

;(DEBUG,Zvalue:#<touch_result> Setter;#<_hal[probe.setterheight]>, Block:#<_hal[probe.blockheight]>)
(MSG,TODO what about G43 G41 G42 can be saved at macro start and restored at end : see "lathemacro")

o<psng_hook_end> call

; signal success be returning a value > 0:
o<psng_manual_change> endsub [1]
M2

